#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

x-superset-user: &superset-user root
x-superset-depends-on: &superset-depends-on
  - db
  - redis
  - superset-worker-beat
  - superset-worker
x-celery-depends-on: &superset-celery-on
  - db
  - redis
x-superset-volumes:
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  &superset-volumes
  - ./docker:/app/docker
  - ./superset:/app/superset
  - ./superset-frontend:/app/superset-frontend
  - superset_home:/app/superset_home
  - ./tests:/app/tests
  - ./bi_superset/:/app/bi_superset/
  - ./bi_superset/bi_cli/bi_cli.py:/app/superset/cli/bi_cli.py
  - ./secrets/:/secrets/
  - ./zf_integration:/app/superset/zf_integration
  - ./zf_utils/jwt.py:/app/superset/utils/jwt.py
  - ./zf_utils:/app/zf_utils
  - ~/.aws:/root/.aws:ro
  - ./requirements:/app/requirements
  - ./setup.py:/app/setup.py
  - ./bi_superset/superset_config.py:/app/superset_config.py
  - ./superset/static/assets:/app/superset/static/assets

version: "3.7"
services:
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis:/data

  db:
    env_file: docker/.env
    image: postgres:14
    container_name: superset_db
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - db_home:/var/lib/postgresql/data

  superset:
    env_file: docker/.env
    image: superset-local
    build:
      context: .
      dockerfile: Dockerfile

    container_name: superset_app
    command: [ "/app/docker/docker-bootstrap.sh", "app" ]
    restart: unless-stopped
    ports:
      - 8088:8088
    stdin_open: true
    user: *superset-user
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    environment:
      CYPRESS_CONFIG: "${CYPRESS_CONFIG}"
      QUERY_ANNOTATIONS: 1

  superset-init:
    image: superset-local
    build:
      context: .
      dockerfile: Dockerfile

    container_name: superset_init
    command: [ "/app/docker/docker-init.sh" ]
    env_file: docker/.env
    depends_on: *superset-depends-on
    user: *superset-user
    volumes: *superset-volumes
    environment:
      CYPRESS_CONFIG: "${CYPRESS_CONFIG}"
    healthcheck:
      disable: true

  superset-worker:
    image: superset-local
    build:
      context: .
      dockerfile: Dockerfile
    container_name: superset_worker
    command: [ "/app/docker/docker-bootstrap.sh", "worker" ]
    env_file: docker/.env
    restart: unless-stopped
    depends_on: *superset-celery-on
    user: *superset-user
    volumes: *superset-volumes
    stdin_open: true
    ports:
      - 6907:6907
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery inspect ping -A superset.tasks.celery_app:app -d celery@$$HOSTNAME"
        ]
    # Bump memory limit if processing selenium / thumbnails on superset-worker
    mem_limit: 2038m
    mem_reservation: 128M

  superset-worker-beat:
    image: superset-local
    build:
      context: .
      dockerfile: Dockerfile
    container_name: superset_worker_beat
    command: [ "/app/docker/docker-bootstrap.sh", "beat" ]
    env_file: docker/.env
    restart: unless-stopped
    depends_on: *superset-celery-on
    user: *superset-user
    volumes: *superset-volumes
    healthcheck:
      disable: true

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
